package main

import (
	"fmt"
	"kz_bot/config"
	"kz_bot/internal/bot"
	"kz_bot/internal/clients"
	"kz_bot/internal/dbase"
	"kz_bot/internal/logger"
	"os"
	"os/signal"
	"syscall"
)

func main() {
	fmt.Println("–ó–ê–ü–£–°–ö –ë–û–¢–ê")
	err := Run()
	if err != nil {
		fmt.Println("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞", err)
		panic(err.Error())
	}
}
func Run() error {
	//—á–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å ENV
	cfg, err := config.InitConfig()
	if err != nil {
		return err
	}

	//—Å–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä –≤ —Ç–µ–ª–µ–≥—É
	log := logger.NewLoggerTG(cfg.LogToken, cfg.LogChatId)
	log.Println("üöÄ  –∑–∞–≥—Ä—É–∑–∫–∞  üöÄ")

	debug := true //–Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å

	//–ø–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–∞–∑–µ –ª–∞–Ω–Ω—ã—Ö
	db, errd := dbase.NewDb(cfg, log, debug)
	if errd != nil {
		return errd
	}

	//—á–∏—Ç–∞—é –∫–æ–Ω—Ñ–∏–≥ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–π
	db.CorpConfig.ReadBotCorpConfig()
	//–∑–∞–ø—É—Å–∫–∞—é –º–µ—Å–µ–Ω–¥–∂–µ—Ä—ã
	cl := clients.NewClient(cfg, db, log, debug)

	//–∑–∞–ø—É—Å–∫–∞—é –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –±–æ—Ç–∞
	go bot.NewBot(*cl, db, log, debug).InitBot()

	quit := make(chan os.Signal, 1)
	signal.Notify(quit, syscall.SIGTERM, syscall.SIGINT)
	<-quit
	fmt.Println("–æ—Å—Ç–∞–Ω–æ–≤–∫–∞")
	db.Shutdown()
	return nil
}
